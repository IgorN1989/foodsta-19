{"mappings":"AAAC,IAASA,ECAT,MACA,MAAMC,EAAaC,SAASC,cAAc,sBACpCC,EAAcF,SAASC,cAAc,iBACrCE,EAAeH,SAASC,cAAc,kBACtCG,EAAa,KAClB,MAAMC,EACyC,SAA9CH,EAAYI,aAAa,mBAA+B,EACzDJ,EAAYK,aAAa,iBAAkBF,GAC3CN,EAAWS,UAAUC,OAAO,WAI5BC,eAH0BL,EAEvB,mBADA,qBAE8BL,SAASW,OAE3CT,EAAYU,iBAAiB,QAASR,GACtCD,EAAaS,iBAAiB,QAASR,GAGvCS,OAAOC,WAAW,sBAAsBF,iBAAiB,UAAWG,IAC9DA,EAAEC,UACPjB,EAAWS,UAAUS,OAAO,WAC5Bf,EAAYK,aAAa,iBAAiB,GAC1CG,eAAeQ,iBAAiBlB,SAASW,WAtB1C,GCAA,MACC,MAAMQ,EAAO,CACXC,aAAcpB,SAASC,cAAc,qBACrCoB,cAAerB,SAASC,cAAc,sBACtCqB,MAAOtB,SAASC,cAAc,gBAC9BU,KAAMX,SAASC,cAAc,gBAM/B,SAASsB,IAEPJ,EAAKG,MAAMd,UAAUC,OAAO,aAC5BU,EAAKR,KAAKH,UAAUC,OAAO,aAN7BU,EAAKC,aAAaR,iBAAiB,QAASW,GAC5CJ,EAAKE,cAAcT,iBAAiB,QAASW,IAT9C,GCADV,OAAOW,SAAW,IAElB,WACE,MAAMC,EAASzB,SAASC,cAAc,iBAChCyB,EAAsBD,EAAOE,aAChBd,OAAOe,YAETF,EACfD,EAAOjB,UAAUqB,IAAI,mBAErBJ,EAAOjB,UAAUS,OAAO,mBAVJa,GHAX,mBAAHhC,EAA6Xe,OAAOkB,QAAQC,WAApXhB,UAAUlB,EAAEkB,QAAQlB,EAAEmC,mBAAmBnC,EAAEoC,oBAAoBpC,EAAEqC,uBAAuB,SAASpB,GAAG,IAAI,IAAIqB,EAAEC,KAAKC,GAAGF,EAAEpC,UAAUoC,EAAEG,eAAeC,iBAAiBzB,GAAG0B,EAAE,EAAEH,EAAEG,IAAIH,EAAEG,KAAKL,KAAKK,EAAE,OAAOC,QAAQJ,EAAEG,MAAM,mBAAmB3C,EAAE6C,UAAU7C,EAAE6C,QAAQ,SAAS5B,GAAG,IAAI,IAAIqB,EAAEC,KAAKD,GAAG,IAAIA,EAAEQ,UAAU,CAAC,GAAGR,EAAEpB,QAAQD,GAAG,OAAOqB,EAAEA,EAAEA,EAAES,WAAW,OAAO,OAG/X7C,SAASY,iBAAiB,oBAAoB,W,kDAIvCkC,EAAe9C,SAASC,cAAiB,qBACzC8C,EAAuB/C,SAACwC,iBAAc,mBAI1CQ,EAAAC,SAA8B,SACRC,GAEnBA,EAAAtC,iBAAA,kBACIG,G,yDASaf,SAAKC,cAAa,sBAChBkD,EAAS,M,wBAMML,EAARtC,UAAVqB,IAAJ,gBAM4BkB,EAAbE,SAAR,SAATC,GAE2BA,EAALtC,iBAAjB,SAAT,SAATG,GACmBsB,KAALM,QAAR,UAEmBnC,UAAVS,OAAP,UAC6B6B,EAARtC,UAAVS,OAAP,gBAM8BjB,SAATW,KAALC,iBAAjB,SAAT,SAAAG,GAGyB,IAFCA,EAAFqC,UAIQpD,SAATC,cAAd,iBAAXO,UAAUS,OAAO,UACiBjB,SAATC,cAAd,YAAZO,UAAMS,OAAO,cAE2B,GAGG6B,EAARlC,iBAAjB,SAAT,WAC8BZ,SAATC,cAAd,iBAAjBO,UAAQS,OAAO,UACyBoB,KAAL7B,UAAVS,OAAP","sources":["src/js/modal-new.js","src/js/mobile-menu.js","src/js/modal.js","src/js/header-scroll.js"],"sourcesContent":["!function(e){\"function\"!=typeof e.matches&&(e.matches=e.msMatchesSelector||e.mozMatchesSelector||e.webkitMatchesSelector||function(e){for(var t=this,o=(t.document||t.ownerDocument).querySelectorAll(e),n=0;o[n]&&o[n]!==t;)++n;return Boolean(o[n])}),\"function\"!=typeof e.closest&&(e.closest=function(e){for(var t=this;t&&1===t.nodeType;){if(t.matches(e))return t;t=t.parentNode}return null})}(window.Element.prototype);\n\n\ndocument.addEventListener('DOMContentLoaded', function() {\n\n   /* Записываем в переменные массив элементов-кнопок и подложку.\n      Подложке зададим id, чтобы не влиять на другие элементы с классом overlay*/\n   var modalButtons = document.querySelectorAll('.js-open-modal'),\n       overlay      = document.querySelector('.js-overlay-modal'),\n       closeButtons = document.querySelectorAll('.js-modal-close');\n\n\n   /* Перебираем массив кнопок */\n   modalButtons.forEach(function(item){\n\n      /* Назначаем каждой кнопке обработчик клика */\n      item.addEventListener('click', function(e) {\n\n         /* Предотвращаем стандартное действие элемента. Так как кнопку разные\n            люди могут сделать по-разному. Кто-то сделает ссылку, кто-то кнопку.\n            Нужно подстраховаться. */\n         e.preventDefault();\n\n         /* При каждом клике на кнопку мы будем забирать содержимое атрибута data-modal\n            и будем искать модальное окно с таким же атрибутом. */\n         var modalId = this.getAttribute('data-modal'),\n             modalElem = document.querySelector('.modal[data-modal=\"' + modalId + '\"]');\n\n\n         /* После того как нашли нужное модальное окно, добавим классы\n            подложке и окну чтобы показать их. */\n         modalElem.classList.add('active');\n         overlay.classList.add('active');\n      }); // end click\n\n   }); // end foreach\n\n\n   closeButtons.forEach(function(item){\n\n      item.addEventListener('click', function(e) {\n         var parentModal = this.closest('.modal');\n\n         parentModal.classList.remove('active');\n         overlay.classList.remove('active');\n      });\n\n   }); // end foreach\n\n\n    document.body.addEventListener('keyup', function (e) {\n        var key = e.keyCode;\n\n        if (key == 27) {\n\n            document.querySelector('.modal.active').classList.remove('active');\n            document.querySelector('.overlay').classList.remove('active');\n        };\n    }, false);\n\n\n    overlay.addEventListener('click', function() {\n        document.querySelector('.modal.active').classList.remove('active');\n        this.classList.remove('active');\n    });\n\n\n\n\n}); // end ready","(() => {\n\tconst mobileMenu = document.querySelector('.js-menu-container');\n\tconst openMenuBtn = document.querySelector('.js-open-menu');\n\tconst closeMenuBtn = document.querySelector('.js-close-menu');\n\tconst toggleMenu = () => {\n\t\tconst isMenuOpen =\n\t\t\topenMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n\t\topenMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n\t\tmobileMenu.classList.toggle('is-open');\n\t\tconst scrollLockMethod = !isMenuOpen\n\t\t\t? 'disableBodyScroll'\n\t\t\t: 'enableBodyScroll';\n\t\tbodyScrollLock[scrollLockMethod](document.body);\n\t};\n\topenMenuBtn.addEventListener('click', toggleMenu);\n\tcloseMenuBtn.addEventListener('click', toggleMenu);\n\t// Закрываем мобильное меню на более широких экранах\n\t// в случае изменения ориентации устройства.\n\twindow.matchMedia('(min-width: 768px)').addEventListener('change', (e) => {\n\t\tif (!e.matches) return;\n\t\tmobileMenu.classList.remove('is-open');\n\t\topenMenuBtn.setAttribute('aria-expanded', false);\n\t\tbodyScrollLock.enableBodyScroll(document.body);\n\t});\n})();","(() => {\n  const refs = {\n    openModalBtn: document.querySelector(\"[data-modal-open]\"),\n    closeModalBtn: document.querySelector(\"[data-modal-close]\"),\n    modal: document.querySelector(\"[data-modal]\"),\n    body: document.querySelector(\"[data-page]\"), \n  };\n\n  refs.openModalBtn.addEventListener(\"click\", toggleModal);\n  refs.closeModalBtn.addEventListener(\"click\", toggleModal);\n\n  function toggleModal() {\n    // document.body.classList.toggle(\"modal-open\");\n    refs.modal.classList.toggle(\"is-hidden\");\n    refs.body.classList.toggle(\"no-scroll\");\n  }\n})();","window.onscroll = () => changeHeaderBackground();\n\nfunction changeHeaderBackground() {\n  const header = document.querySelector('[data-header]');\n  const headerOffsetTrigger = header.offsetHeight;\n  const pageOffset = window.pageYOffset;\n\n  if (pageOffset > headerOffsetTrigger) {\n    header.classList.add('no-transparency');\n  } else {\n    header.classList.remove('no-transparency');\n  }\n}"],"names":["e1","mobileMenu","document","querySelector","openMenuBtn","closeMenuBtn","toggleMenu","isMenuOpen","getAttribute","setAttribute","classList","toggle","bodyScrollLock","body","addEventListener","window","matchMedia","e","matches","remove","enableBodyScroll","refs","openModalBtn","closeModalBtn","modal","toggleModal","onscroll","header","headerOffsetTrigger","offsetHeight","pageYOffset","add","$c8ef77e7f7ecd6cb$var$changeHeaderBackground","Element","prototype","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","t","this","o","ownerDocument","querySelectorAll","n","Boolean","closest","nodeType","parentNode","overlay","closeButtons","modalButtons","forEach","item","modalId","keyCode"],"version":3,"file":"index.b3a2f65d.js.map"}